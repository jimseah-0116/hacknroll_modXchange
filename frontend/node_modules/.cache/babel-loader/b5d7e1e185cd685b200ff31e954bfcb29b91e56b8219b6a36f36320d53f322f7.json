{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akt30\\\\Documents\\\\GitHub\\\\modXchange\\\\frontend\\\\src\\\\pages\\\\ExchangeForm\\\\ExchangeForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeForm = () => {\n  _s();\n  const [modules, setModules] = useState(null);\n  const [module, setModule] = useState('');\n  const [slots, setSlots] = useState(null);\n  const [slot, setSlot] = useState(null);\n  const [slotWanted, setSlotWanted] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchModules = async () => {\n      //hardcoded acd year for now\n      const response = await fetch('https://api.nusmods.com/v2/2023-2024/moduleList.json');\n      const json = await response.json();\n      //hardocded to sem 2 for now\n      const arr = json.filter(mod => mod.semesters.includes(2)).map(module => ({\n        value: module.moduleCode,\n        label: module.moduleCode\n      }));\n      if (response.ok) {\n        setModules(arr);\n      }\n    };\n    const fetchSlots = async () => {\n      //hardcoded acad year for now\n      const response = await fetch(`https://api.nusmods.com/v2/2023-2024/modules/${module}.json`);\n      const json = await response.json();\n      //hardcoded to sem2\n      const index = json.semesterData.length === 1 ? 0 : 1;\n      const arr = json.semesterData[index].timetable.filter(slot => slot.lessonType === \"Tutorial\").map(slot => ({\n        value: slot,\n        label: `${slot.classNo} (${slot.day}, ${slot.startTime} to ${slot.endTime})`\n      }));\n      if (response.ok) {\n        setSlots(arr);\n      }\n    };\n    if (!modules) {\n      fetchModules();\n    }\n    if (module !== '') {\n      fetchSlots();\n    }\n  }, [module]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const exchange = {\n      module,\n      lessonType: \"Tutorial\",\n      venue: slot.venue,\n      tele: \"usertele\",\n      classNo: slot.classNo,\n      day: slot.day,\n      startTime: slot.startTime,\n      endTime: slot.endTime,\n      weeks: slot.weeks,\n      classNoWanted: slotWanted.classNo,\n      dayWanted: slotWanted.day,\n      startTimeWanted: slotWanted.startTime,\n      endTimeWanted: slotWanted.endTime,\n      weeksWanted: slotWanted.weeks,\n      venueWanted: slotWanted.venue\n    };\n    const response = await fetch('/api/slots/', {\n      method: 'POST',\n      body: JSON.stringify(exchange),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      setError(null);\n      setModule('');\n      setSlots(null);\n      setSlot(null);\n      setSlotWanted(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"exchange\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select a module\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), modules && /*#__PURE__*/_jsxDEV(Select, {\n      options: modules,\n      onChange: mod => setModule(mod.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this), module !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Slot you have\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: slots,\n        onChange: s => setSlot(s.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), module !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Slot you want\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: slots,\n        onChange: s => setSlotWanted(s.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), slot && slotWanted && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit exchange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangeForm, \"2JHFstJD0kRBXSEiwCONkKSA8IQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ExchangeForm;\nexport default ExchangeForm;\nvar _c;\n$RefreshReg$(_c, \"ExchangeForm\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Select","jsxDEV","_jsxDEV","ExchangeForm","_s","modules","setModules","module","setModule","slots","setSlots","slot","setSlot","slotWanted","setSlotWanted","error","setError","navigate","fetchModules","response","fetch","json","arr","filter","mod","semesters","includes","map","value","moduleCode","label","ok","fetchSlots","index","semesterData","length","timetable","lessonType","classNo","day","startTime","endTime","handleSubmit","e","preventDefault","exchange","venue","tele","weeks","classNoWanted","dayWanted","startTimeWanted","endTimeWanted","weeksWanted","venueWanted","method","body","JSON","stringify","headers","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","s","_c","$RefreshReg$"],"sources":["C:/Users/akt30/Documents/GitHub/modXchange/frontend/src/pages/ExchangeForm/ExchangeForm.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Select from 'react-select'\r\nconst ExchangeForm = () => {\r\n    const [modules, setModules] = useState(null);\r\n    const [module, setModule] = useState('');\r\n    const [slots, setSlots] = useState(null);\r\n    const [slot, setSlot] = useState(null);\r\n    const [slotWanted, setSlotWanted] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const fetchModules = async () => {\r\n            //hardcoded acd year for now\r\n            const response = await fetch('https://api.nusmods.com/v2/2023-2024/moduleList.json');\r\n            const json = await response.json();\r\n            //hardocded to sem 2 for now\r\n            const arr = json.filter((mod) => mod.semesters.includes(2))\r\n                            .map((module) => ({value: module.moduleCode, label: module.moduleCode}));\r\n            if (response.ok) {\r\n                setModules(arr);\r\n            }\r\n        }\r\n        const fetchSlots = async () => {\r\n            //hardcoded acad year for now\r\n            const response = await fetch(`https://api.nusmods.com/v2/2023-2024/modules/${module}.json`);\r\n            const json = await response.json();\r\n            //hardcoded to sem2\r\n            const index = json.semesterData.length === 1 ? 0 : 1;\r\n            const arr = json.semesterData[index].timetable\r\n                .filter((slot) => slot.lessonType === \"Tutorial\")\r\n                .map((slot) => ({value: slot, label: `${slot.classNo} (${slot.day}, ${slot.startTime} to ${slot.endTime})`}));\r\n            if (response.ok) {\r\n                setSlots(arr);\r\n            }\r\n        }\r\n        if (!modules) {\r\n            fetchModules();\r\n        }\r\n        if (module !== '') {\r\n            fetchSlots();\r\n        }\r\n    }, [module]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const exchange = {module, lessonType: \"Tutorial\", venue: slot.venue, tele: \"usertele\",\r\n                          classNo: slot.classNo, day: slot.day, startTime: slot.startTime, endTime: slot.endTime, weeks: slot.weeks,\r\n                          classNoWanted: slotWanted.classNo, dayWanted: slotWanted.day, startTimeWanted: slotWanted.startTime, \r\n                          endTimeWanted: slotWanted.endTime, weeksWanted: slotWanted.weeks, venueWanted: slotWanted.venue};\r\n        \r\n        const response = await fetch('/api/slots/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(exchange),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const json = await response.json();\r\n\r\n        if (!response.ok) {\r\n            setError(json.error);\r\n        } \r\n        if (response.ok) {\r\n            setError(null);\r\n            setModule('');\r\n            setSlots(null);\r\n            setSlot(null);\r\n            setSlotWanted(null);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form className='exchange' onSubmit={handleSubmit}>\r\n            <h3>Select a module</h3>\r\n            {modules && <Select options={modules} onChange={(mod) => setModule(mod.value)}/>}\r\n            {(module !== '') && \r\n            <div>\r\n                <h3>Slot you have</h3>\r\n                <Select options={slots} onChange={(s) => setSlot(s.value)}/>\r\n            </div>\r\n            }\r\n\r\n            {(module !== '') && \r\n            <div>\r\n                <h3>Slot you want</h3>\r\n                <Select options={slots} onChange={(s) => setSlotWanted(s.value)}/>\r\n            </div>\r\n            }\r\n            {(slot && slotWanted) &&\r\n                <button >Submit exchange</button>\r\n            }\r\n            {error}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExchangeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}