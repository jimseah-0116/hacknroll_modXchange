{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akt30\\\\Documents\\\\GitHub\\\\modXchange\\\\frontend\\\\src\\\\pages\\\\ExchangeForm\\\\ExchangeForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeForm = () => {\n  _s();\n  const [modules, setModules] = useState(null);\n  const [module, setModule] = useState('');\n  const [moduleWanted, setModuleWanted] = useState('');\n  const [slots, setSlots] = useState(null);\n  const [slotsWanted, setSlotsWanted] = useState(null);\n  const [slot, setSlot] = useState(null);\n  useEffect(() => {\n    const fetchModules = async () => {\n      //hardcoded acd year for now\n      const response = await fetch('https://api.nusmods.com/v2/2023-2024/moduleList.json');\n      const json = await response.json();\n      //hardocded to sem 2 for now\n      const arr = json.filter(mod => mod.semesters.includes(2)).map(module => ({\n        value: module.moduleCode,\n        label: module.moduleCode\n      }));\n      if (response.ok) {\n        setModules(arr);\n      }\n    };\n    const fetchSlots = async () => {\n      //hardcoded acad year for now\n      const response = await fetch(`https://api.nusmods.com/v2/2023-2024/modules/${module}.json`);\n      const json = await response.json();\n      //hardcoded to sem2\n      const index = json.semesterData.length === 1 ? 0 : 1;\n      const arr = json.semesterData[index].timetable.filter(slot => slot.lessonType === \"Tutorial\").map(slot => ({\n        value: slot,\n        label: `${slot.classNo} (${slot.day}, ${slot.startTime} to ${slot.endTime})`\n      }));\n      if (response.ok) {\n        setSlots(arr);\n      }\n    };\n    const fetchSlotsWanted = async () => {\n      //hardcoded acad year for now\n      const response = await fetch(`https://api.nusmods.com/v2/2023-2024/modules/${moduleWanted}.json`);\n      const json = await response.json();\n      //hardcoded to sem2\n      const index = json.semesterData.length === 1 ? 0 : 1;\n      const arr = json.semesterData[index].timetable.filter(slot => slot.lessonType === \"Tutorial\").map(slot => ({\n        value: slot,\n        label: `${slot.classNo} (${slot.day}, ${slot.startTime} to ${slot.endTime})`\n      }));\n      if (response.ok) {\n        setSlotsWanted(arr);\n      }\n    };\n    if (!modules) {\n      fetchModules();\n    }\n    if (module !== '') {\n      fetchSlots();\n    }\n  }, [module]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"exchange\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Module you have\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select a module\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), modules && /*#__PURE__*/_jsxDEV(Select, {\n      options: modules,\n      onChange: mod => setModule(mod.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this), module !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: slots,\n        onChange: s => setSlot(s.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Module you want\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select a module\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), modules && /*#__PURE__*/_jsxDEV(Select, {\n      options: modules,\n      onChange: mod => setModuleWanted(mod.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this), module !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: slotsWanted,\n        onChange: s => setSlotWanted(s.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangeForm, \"cp9YR3NNhYnxVQs4FGJiLpn4qjA=\");\n_c = ExchangeForm;\nexport default ExchangeForm;\nvar _c;\n$RefreshReg$(_c, \"ExchangeForm\");","map":{"version":3,"names":["useEffect","useState","Select","jsxDEV","_jsxDEV","ExchangeForm","_s","modules","setModules","module","setModule","moduleWanted","setModuleWanted","slots","setSlots","slotsWanted","setSlotsWanted","slot","setSlot","fetchModules","response","fetch","json","arr","filter","mod","semesters","includes","map","value","moduleCode","label","ok","fetchSlots","index","semesterData","length","timetable","lessonType","classNo","day","startTime","endTime","fetchSlotsWanted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","s","setSlotWanted","_c","$RefreshReg$"],"sources":["C:/Users/akt30/Documents/GitHub/modXchange/frontend/src/pages/ExchangeForm/ExchangeForm.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Select from 'react-select'\r\nconst ExchangeForm = () => {\r\n    const [modules, setModules] = useState(null);\r\n    const [module, setModule] = useState('');\r\n    const [moduleWanted, setModuleWanted] = useState('');\r\n    const [slots, setSlots] = useState(null);\r\n    const [slotsWanted, setSlotsWanted] = useState(null);\r\n    const [slot, setSlot] = useState(null);\r\n    useEffect(() => {\r\n        const fetchModules = async () => {\r\n            //hardcoded acd year for now\r\n            const response = await fetch('https://api.nusmods.com/v2/2023-2024/moduleList.json');\r\n            const json = await response.json();\r\n            //hardocded to sem 2 for now\r\n            const arr = json.filter((mod) => mod.semesters.includes(2))\r\n                            .map((module) => ({value: module.moduleCode, label: module.moduleCode}));\r\n            if (response.ok) {\r\n                setModules(arr);\r\n            }\r\n        }\r\n        const fetchSlots = async () => {\r\n            //hardcoded acad year for now\r\n            const response = await fetch(`https://api.nusmods.com/v2/2023-2024/modules/${module}.json`);\r\n            const json = await response.json();\r\n            //hardcoded to sem2\r\n            const index = json.semesterData.length === 1 ? 0 : 1;\r\n            const arr = json.semesterData[index].timetable\r\n                .filter((slot) => slot.lessonType === \"Tutorial\")\r\n                .map((slot) => ({value: slot, label: `${slot.classNo} (${slot.day}, ${slot.startTime} to ${slot.endTime})`}));\r\n            if (response.ok) {\r\n                setSlots(arr);\r\n            }\r\n        }\r\n        const fetchSlotsWanted = async () => {\r\n            //hardcoded acad year for now\r\n            const response = await fetch(`https://api.nusmods.com/v2/2023-2024/modules/${moduleWanted}.json`);\r\n            const json = await response.json();\r\n            //hardcoded to sem2\r\n            const index = json.semesterData.length === 1 ? 0 : 1;\r\n            const arr = json.semesterData[index].timetable\r\n                .filter((slot) => slot.lessonType === \"Tutorial\")\r\n                .map((slot) => ({value: slot, label: `${slot.classNo} (${slot.day}, ${slot.startTime} to ${slot.endTime})`}));\r\n            if (response.ok) {\r\n                setSlotsWanted(arr);\r\n            }\r\n        }\r\n        if (!modules) {\r\n            fetchModules();\r\n        }\r\n        if (module !== '') {\r\n            fetchSlots();\r\n        }\r\n    }, [module]);\r\n    \r\n    return (\r\n        <form className='exchange'>\r\n            <h2>Module you have</h2>\r\n            <h3>Select a module</h3>\r\n            {modules && <Select options={modules} onChange={(mod) => setModule(mod.value)}/>}\r\n            {(module !== '') && \r\n            <div>\r\n                <h3>Select a slot</h3>\r\n                <Select options={slots} onChange={(s) => setSlot(s.value)}/>\r\n            </div>\r\n            }\r\n            <h2>Module you want</h2>\r\n            <h3>Select a module</h3>\r\n            {modules && <Select options={modules} onChange={(mod) => setModuleWanted(mod.value)}/>}\r\n            {(module !== '') && \r\n            <div>\r\n                <h3>Select a slot</h3>\r\n                <Select options={slotsWanted} onChange={(s) => setSlotWanted(s.value)}/>\r\n            </div>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExchangeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}